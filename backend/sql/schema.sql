-- SQL dump generated using DBML (dbml.dbdiagram.io)
-- Database: PostgreSQL
-- Generated at: 2025-10-29T13:21:42.327Z

CREATE TYPE "user_role" AS ENUM (
  'barber',
  'client'
);

CREATE TYPE "day_of_week" AS ENUM (
  'sunday',
  'monday',
  'tuesday',
  'wednesday',
  'thursday',
  'friday',
  'saturday'
);

CREATE TYPE "appointment_status" AS ENUM (
  'pending',
  'confirmed',
  'completed',
  'cancelled',
  'no_show'
);

CREATE TYPE "payment_method" AS ENUM (
  'credit_card',
  'debit_card',
  'cash',
  'pix',
  'payment_link'
);

CREATE TYPE "payment_status" AS ENUM (
  'pending',
  'paid',
  'failed',
  'refunded'
);

CREATE TYPE "queue_entry_status" AS ENUM (
  'waiting',
  'in_service',
  'completed',
  'removed'
);

CREATE TYPE "whatsapp_message_type" AS ENUM (
  'inbound',
  'outbound'
);

CREATE TYPE "whatsapp_interaction_type" AS ENUM (
  'query',
  'booking',
  'cancellation',
  'status_update',
  'payment_link_sent'
);

CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "phone_number" varchar(20) UNIQUE NOT NULL,
  "email" varchar(255) UNIQUE,
  "password_hash" varchar(255),
  "role" user_role NOT NULL,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "services" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) UNIQUE NOT NULL,
  "description" text,
  "price" decimal(10,2) NOT NULL,
  "duration_minutes" integer NOT NULL,
  "is_active" boolean NOT NULL DEFAULT true,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "operating_hours" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "barber_id" integer NOT NULL,
  "day_of_week" day_of_week NOT NULL,
  "start_time" time NOT NULL,
  "end_time" time NOT NULL,
  "break_start_time" time,
  "break_end_time" time,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "appointments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "client_id" integer NOT NULL,
  "barber_id" integer NOT NULL,
  "service_id" integer NOT NULL,
  "appointment_date" date NOT NULL,
  "start_time" time NOT NULL,
  "end_time" time NOT NULL,
  "status" appointment_status NOT NULL DEFAULT 'pending',
  "is_walk_in" boolean NOT NULL DEFAULT false,
  "notes" text,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "payments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "appointment_id" integer UNIQUE,
  "client_id" integer NOT NULL,
  "amount" decimal(10,2) NOT NULL,
  "payment_method" payment_method NOT NULL,
  "transaction_id" varchar(255) UNIQUE,
  "status" payment_status NOT NULL DEFAULT 'pending',
  "payment_date" timestamp,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "waiting_queue" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "client_id" integer NOT NULL,
  "barber_id" integer NOT NULL,
  "service_id" integer,
  "queue_position" integer NOT NULL,
  "status" queue_entry_status NOT NULL DEFAULT 'waiting',
  "entry_time" timestamp NOT NULL DEFAULT (now()),
  "estimated_service_start_time" timestamp,
  "actual_service_start_time" timestamp,
  "actual_service_end_time" timestamp,
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE TABLE "whatsapp_interactions" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "client_id" integer NOT NULL,
  "message_type" whatsapp_message_type NOT NULL,
  "message_content" text NOT NULL,
  "interaction_type" whatsapp_interaction_type NOT NULL,
  "related_appointment_id" integer,
  "timestamp" timestamp NOT NULL DEFAULT (now()),
  "created_at" timestamp DEFAULT (now()),
  "updated_at" timestamp DEFAULT (now())
);

CREATE UNIQUE INDEX ON "users" ("phone_number");

CREATE UNIQUE INDEX ON "users" ("email");

CREATE UNIQUE INDEX ON "services" ("name");

CREATE UNIQUE INDEX ON "operating_hours" ("barber_id", "day_of_week");

CREATE INDEX ON "appointments" ("client_id");

CREATE INDEX ON "appointments" ("barber_id");

CREATE INDEX ON "appointments" ("appointment_date", "start_time");

CREATE INDEX ON "appointments" ("status");

CREATE UNIQUE INDEX ON "payments" ("appointment_id");

CREATE INDEX ON "payments" ("client_id");

CREATE INDEX ON "payments" ("status");

CREATE INDEX ON "payments" ("payment_date");

CREATE INDEX ON "waiting_queue" ("barber_id");

CREATE UNIQUE INDEX ON "waiting_queue" ("barber_id", "queue_position");

CREATE INDEX ON "waiting_queue" ("status");

CREATE INDEX ON "waiting_queue" ("entry_time");

CREATE INDEX ON "whatsapp_interactions" ("client_id");

CREATE INDEX ON "whatsapp_interactions" ("related_appointment_id");

CREATE INDEX ON "whatsapp_interactions" ("timestamp");

COMMENT ON TABLE "users" IS 'Armazena informações de usuários do sistema, incluindo barbeiros e clientes.';

COMMENT ON COLUMN "users"."phone_number" IS 'Número de telefone para contato e integração WhatsApp';

COMMENT ON COLUMN "users"."email" IS 'Endereço de e-mail para acesso web';

COMMENT ON COLUMN "users"."password_hash" IS 'Hash da senha para login web';

COMMENT ON COLUMN "users"."role" IS 'Papel do usuário no sistema (barbeiro ou cliente)';

COMMENT ON TABLE "services" IS 'Define os tipos de serviços oferecidos pela barbearia.';

COMMENT ON COLUMN "services"."name" IS 'Nome do serviço (ex: Corte de Cabelo, Barba)';

COMMENT ON COLUMN "services"."description" IS 'Descrição detalhada do serviço';

COMMENT ON COLUMN "services"."price" IS 'Preço do serviço';

COMMENT ON COLUMN "services"."duration_minutes" IS 'Tempo médio de duração do serviço em minutos';

COMMENT ON COLUMN "services"."is_active" IS 'Indica se o serviço está ativo e disponível';

COMMENT ON TABLE "operating_hours" IS 'Define os horários de funcionamento da barbearia por dia da semana para cada barbeiro.';

COMMENT ON COLUMN "operating_hours"."barber_id" IS 'ID do barbeiro a quem se refere o horário de funcionamento';

COMMENT ON COLUMN "operating_hours"."day_of_week" IS 'Dia da semana para o qual o horário se aplica';

COMMENT ON COLUMN "operating_hours"."start_time" IS 'Hora de início do expediente';

COMMENT ON COLUMN "operating_hours"."end_time" IS 'Hora de término do expediente';

COMMENT ON COLUMN "operating_hours"."break_start_time" IS 'Hora de início do intervalo (ex: almoço)';

COMMENT ON COLUMN "operating_hours"."break_end_time" IS 'Hora de término do intervalo';

COMMENT ON TABLE "appointments" IS 'Registra os agendamentos de serviços, incluindo clientes, barbeiros e status.';

COMMENT ON COLUMN "appointments"."client_id" IS 'ID do cliente que fez o agendamento';

COMMENT ON COLUMN "appointments"."barber_id" IS 'ID do barbeiro que realizará o serviço';

COMMENT ON COLUMN "appointments"."service_id" IS 'ID do serviço agendado';

COMMENT ON COLUMN "appointments"."appointment_date" IS 'Data do agendamento';

COMMENT ON COLUMN "appointments"."start_time" IS 'Hora de início do agendamento';

COMMENT ON COLUMN "appointments"."end_time" IS 'Hora de término prevista do agendamento';

COMMENT ON COLUMN "appointments"."status" IS 'Status atual do agendamento';

COMMENT ON COLUMN "appointments"."is_walk_in" IS 'Indica se o agendamento foi um encaixe (cliente sem reserva)';

COMMENT ON COLUMN "appointments"."notes" IS 'Observações adicionais sobre o agendamento';

COMMENT ON TABLE "payments" IS 'Registra todas as transações de pagamento, permitindo controle financeiro.';

COMMENT ON COLUMN "payments"."appointment_id" IS 'ID do agendamento relacionado ao pagamento (se houver)';

COMMENT ON COLUMN "payments"."client_id" IS 'ID do cliente que realizou o pagamento';

COMMENT ON COLUMN "payments"."amount" IS 'Valor total do pagamento';

COMMENT ON COLUMN "payments"."payment_method" IS 'Método utilizado para o pagamento';

COMMENT ON COLUMN "payments"."transaction_id" IS 'ID da transação gerado pelo gateway de pagamento';

COMMENT ON COLUMN "payments"."status" IS 'Status atual do pagamento';

COMMENT ON COLUMN "payments"."payment_date" IS 'Data e hora em que o pagamento foi efetivado';

COMMENT ON TABLE "waiting_queue" IS 'Gerencia a fila dinâmica de clientes, incluindo encaixes e status em tempo real.';

COMMENT ON COLUMN "waiting_queue"."client_id" IS 'ID do cliente na fila de espera';

COMMENT ON COLUMN "waiting_queue"."barber_id" IS 'ID do barbeiro para o qual o cliente está aguardando';

COMMENT ON COLUMN "waiting_queue"."service_id" IS 'ID do serviço desejado pelo cliente (pode ser nulo se ainda não definido)';

COMMENT ON COLUMN "waiting_queue"."queue_position" IS 'Posição atual do cliente na fila';

COMMENT ON COLUMN "waiting_queue"."status" IS 'Status do cliente na fila (aguardando, em serviço, etc.)';

COMMENT ON COLUMN "waiting_queue"."entry_time" IS 'Data e hora de entrada do cliente na fila';

COMMENT ON COLUMN "waiting_queue"."estimated_service_start_time" IS 'Hora estimada para o início do atendimento';

COMMENT ON COLUMN "waiting_queue"."actual_service_start_time" IS 'Hora real de início do atendimento';

COMMENT ON COLUMN "waiting_queue"."actual_service_end_time" IS 'Hora real de término do atendimento';

COMMENT ON TABLE "whatsapp_interactions" IS 'Armazena o histórico de todas as interações via WhatsApp com os clientes.';

COMMENT ON COLUMN "whatsapp_interactions"."client_id" IS 'ID do cliente envolvido na interação';

COMMENT ON COLUMN "whatsapp_interactions"."message_type" IS 'Tipo da mensagem (entrada ou saída)';

COMMENT ON COLUMN "whatsapp_interactions"."message_content" IS 'Conteúdo da mensagem de WhatsApp';

COMMENT ON COLUMN "whatsapp_interactions"."interaction_type" IS 'Tipo de interação (consulta, agendamento, etc.)';

COMMENT ON COLUMN "whatsapp_interactions"."related_appointment_id" IS 'ID do agendamento relacionado à interação (se houver)';

COMMENT ON COLUMN "whatsapp_interactions"."timestamp" IS 'Data e hora da interação';

ALTER TABLE "operating_hours" ADD FOREIGN KEY ("barber_id") REFERENCES "users" ("id");

ALTER TABLE "appointments" ADD FOREIGN KEY ("client_id") REFERENCES "users" ("id");

ALTER TABLE "appointments" ADD FOREIGN KEY ("barber_id") REFERENCES "users" ("id");

ALTER TABLE "appointments" ADD FOREIGN KEY ("service_id") REFERENCES "services" ("id");

ALTER TABLE "payments" ADD FOREIGN KEY ("appointment_id") REFERENCES "appointments" ("id");

ALTER TABLE "payments" ADD FOREIGN KEY ("client_id") REFERENCES "users" ("id");

ALTER TABLE "waiting_queue" ADD FOREIGN KEY ("client_id") REFERENCES "users" ("id");

ALTER TABLE "waiting_queue" ADD FOREIGN KEY ("barber_id") REFERENCES "users" ("id");

ALTER TABLE "waiting_queue" ADD FOREIGN KEY ("service_id") REFERENCES "services" ("id");

ALTER TABLE "whatsapp_interactions" ADD FOREIGN KEY ("client_id") REFERENCES "users" ("id");

ALTER TABLE "whatsapp_interactions" ADD FOREIGN KEY ("related_appointment_id") REFERENCES "appointments" ("id");
